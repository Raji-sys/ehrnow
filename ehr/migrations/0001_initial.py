# Generated by Django 5.0.1 on 2024-05-13 23:05

import django.db.models.deletion
import django_quill.fields
import ehr.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_no', ehr.models.SerialNumberField(blank=True, default='', editable=False, max_length=20)),
                ('title', models.CharField(blank=True, max_length=7, null=True)),
                ('last_name', models.CharField(blank=True, max_length=300, null=True)),
                ('first_name', models.CharField(blank=True, max_length=300, null=True)),
                ('other_name', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=10, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('marital_status', models.CharField(blank=True, choices=[('MARRIED', 'MARRIED'), ('SINGLE', 'SINGLE'), ('DIVORCED', 'DIVORCED'), ('DIVORCEE', 'DIVORCEE'), ('WIDOW', 'WIDOW'), ('WIDOWER', 'WIDOWER')], max_length=100, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('NIGERIAN', 'NIGERIAN'), ('NON-CITIZEN', 'NON-CITIZEN')], max_length=200, null=True)),
                ('zone', models.CharField(blank=True, choices=[('NORTH-EAST', 'NORTH-EAST'), ('NORTH-WEST', 'NORTH-WEST'), ('NORTH-CENTRAL', 'NORTH-CENTRAL'), ('SOUTH-EAST', 'SOUTH-EAST'), ('SOUTH-WEST', 'SOUTH-WEST'), ('SOUTH-SOUTH', 'SOUTH-SOUTH')], max_length=300, null=True)),
                ('state', models.CharField(blank=True, max_length=300, null=True)),
                ('lga', models.CharField(blank=True, max_length=300, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('religion', models.CharField(blank=True, choices=[('ISLAM', 'ISLAM'), ('CHRISTIANITY', 'CHRISTIANITY'), ('TRADITIONAL', 'TRADITIONAL')], max_length=100, null=True)),
                ('occupation', models.CharField(blank=True, max_length=300, null=True)),
                ('role_in_occupation', models.CharField(blank=True, max_length=300, null=True)),
                ('nok_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='next of kin name')),
                ('nok_phone', models.PositiveIntegerField(blank=True, null=True, verbose_name='next of kin phone')),
                ('nok_addr', models.CharField(blank=True, max_length=300, null=True, verbose_name='next of kin address')),
                ('nok_rel', models.CharField(blank=True, choices=[('FATHER', 'FATHER'), ('MOTHER', 'MOTHER'), ('SON', 'SON'), ('DAUGHTER', 'DAUGHTER'), ('BROTHER', 'BROTHER'), ('SISTER', 'SISTER'), ('UNCLE', 'UNCLE'), ('AUNT', 'AUNT'), ('NEPHEW', 'NEPHEW'), ('NIECE', 'NIECE'), ('GRANDFATHER', 'GRANDFATHER'), ('GRANDMOTHER', 'GRANDMOTHTER'), ('GRANDSON', 'GRANDSON'), ('GRANDDAUGHTER', 'GRANDAUGHTER'), ('COUSIN', 'COUSIN'), ('OTHER', 'OTHER')], max_length=300, null=True, verbose_name='relationship with next of kin')),
                ('clinic', models.CharField(choices=[('A & E', 'A & E'), ('SOPD', 'SOPD'), ('SPINE SOPD', 'SPINE SOPD'), ('GOPD', 'GOPD')], max_length=30, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'patients data',
            },
        ),
        migrations.CreateModel(
            name='Paypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(blank=True, max_length=100, null=True, verbose_name='Receipt Number')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('receipt_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Receipt Number')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], default='pending', max_length=20)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=10, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ROOM 1', 'ROOM 1'), ('ROOM 2', 'ROOM 2'), ('ROOM 3', 'ROOM 3')], max_length=30, null=True)),
                ('clinic', models.CharField(choices=[('A & E', 'A & E'), ('SOPD', 'SOPD'), ('SPINE SOPD', 'SPINE SOPD'), ('GOPD', 'GOPD')], max_length=30, null=True)),
                ('waiting_since', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'virtual room',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'hospital services',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='TYPE OF SERVICE')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(choices=[('ROOM 1', 'ROOM 1'), ('ROOM 2', 'ROOM 2'), ('ROOM 3', 'ROOM 3')], max_length=30, null=True)),
                ('clinic', models.CharField(choices=[('A & E', 'A & E'), ('SOPD', 'SOPD'), ('SPINE SOPD', 'SPINE SOPD'), ('GOPD', 'GOPD')], max_length=30, null=True)),
                ('body_temperature', models.CharField(blank=True, max_length=10, null=True)),
                ('pulse_rate', models.CharField(blank=True, max_length=10, null=True)),
                ('respiration_rate', models.CharField(blank=True, max_length=10, null=True)),
                ('blood_pressure', models.CharField(blank=True, max_length=10, null=True)),
                ('blood_oxygen', models.CharField(blank=True, max_length=10, null=True)),
                ('blood_glucose', models.CharField(blank=True, max_length=10, null=True)),
                ('weight', models.CharField(blank=True, max_length=10, null=True)),
                ('height', models.CharField(blank=True, max_length=10, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'vital signs',
            },
        ),
        migrations.CreateModel(
            name='FollowUpVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic', models.CharField(choices=[('A & E', 'A & E'), ('SOPD', 'SOPD'), ('SPINE SOPD', 'SPINE SOPD'), ('GOPD', 'GOPD')], max_length=30, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='follow_up', to='ehr.patientdata')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', django_quill.fields.QuillField(blank=True, null=True)),
                ('diagnosis', models.CharField(blank=True, max_length=300, null=True)),
                ('prescription', models.CharField(blank=True, max_length=300, null=True)),
                ('phatology', models.CharField(blank=True, max_length=300, null=True)),
                ('radiology', models.CharField(blank=True, max_length=300, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clinical_notes', to='ehr.patientdata')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic', models.CharField(choices=[('A & E', 'A & E'), ('SOPD', 'SOPD'), ('SPINE SOPD', 'SPINE SOPD'), ('GOPD', 'GOPD')], max_length=30, null=True)),
                ('team', models.CharField(choices=[('WHITE', 'WHITE'), ('GREEN', 'GREEN'), ('BLUE', 'BLUE'), ('YELLOW', 'YELLOW')], max_length=30, null=True)),
                ('date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='ehr.patientdata')),
            ],
        ),
        migrations.CreateModel(
            name='PatientHandover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic', models.CharField(choices=[('A & E', 'A & E'), ('SOPD', 'SOPD'), ('SPINE SOPD', 'SPINE SOPD'), ('GOPD', 'GOPD')], max_length=30, null=True)),
                ('room', models.CharField(choices=[('ROOM 1', 'ROOM 1'), ('ROOM 2', 'ROOM 2'), ('ROOM 3', 'ROOM 3')], max_length=30, null=True)),
                ('status', models.CharField(choices=[('waiting_for_payment', 'Waiting for Payment'), ('waiting_for_clinic_assignment', 'Waiting for Clinic Assignment'), ('waiting_for_vital_signs', 'Waiting for Vital Signs'), ('waiting_for_consultation', 'Waiting for Consultation'), ('seen', 'seen'), ('review', 'review')], max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handovers', to='ehr.patientdata')),
            ],
        ),
    ]
